//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Account_0", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PiggyDB.Currency), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Account), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Account_1", "FinancialInstitution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PiggyDB.FinancialInstitution), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Account), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Account_2", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PiggyDB.AccountType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Account), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Balance_0", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PiggyDB.Account), "Balance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Balance), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Transactions_1", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PiggyDB.Account), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Transaction), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Transactions_2", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PiggyDB.Account), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Transaction), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Category_0", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PiggyDB.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Category), true)]
[assembly: EdmRelationshipAttribute("PiggyModel", "FK_Transactions_0", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PiggyDB.Category), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PiggyDB.Transaction), true)]

#endregion

namespace PiggyDB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PiggyContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PiggyContext object using the connection string found in the 'PiggyContext' section of the application configuration file.
        /// </summary>
        public PiggyContext() : base("name=PiggyContext", "PiggyContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PiggyContext object.
        /// </summary>
        public PiggyContext(string connectionString) : base(connectionString, "PiggyContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PiggyContext object.
        /// </summary>
        public PiggyContext(EntityConnection connection) : base(connection, "PiggyContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountTypes
        {
            get
            {
                if ((_AccountTypes == null))
                {
                    _AccountTypes = base.CreateObjectSet<AccountType>("AccountTypes");
                }
                return _AccountTypes;
            }
        }
        private ObjectSet<AccountType> _AccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Balance> Balances
        {
            get
            {
                if ((_Balances == null))
                {
                    _Balances = base.CreateObjectSet<Balance>("Balances");
                }
                return _Balances;
            }
        }
        private ObjectSet<Balance> _Balances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinancialInstitution> FinancialInstitutions
        {
            get
            {
                if ((_FinancialInstitutions == null))
                {
                    _FinancialInstitutions = base.CreateObjectSet<FinancialInstitution>("FinancialInstitutions");
                }
                return _FinancialInstitutions;
            }
        }
        private ObjectSet<FinancialInstitution> _FinancialInstitutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Preference> Preferences
        {
            get
            {
                if ((_Preferences == null))
                {
                    _Preferences = base.CreateObjectSet<Preference>("Preferences");
                }
                return _Preferences;
            }
        }
        private ObjectSet<Preference> _Preferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypes(AccountType accountType)
        {
            base.AddObject("AccountTypes", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Balances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBalances(Balance balance)
        {
            base.AddObject("Balances", balance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinancialInstitutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinancialInstitutions(FinancialInstitution financialInstitution)
        {
            base.AddObject("FinancialInstitutions", financialInstitution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Preferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferences(Preference preference)
        {
            base.AddObject("Preferences", preference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="account_type">Initial value of the account_type property.</param>
        /// <param name="financial_institution">Initial value of the financial_institution property.</param>
        /// <param name="currency">Initial value of the currency property.</param>
        public static Account CreateAccount(global::System.Int64 id, global::System.String name, global::System.Int64 account_type, global::System.Int64 financial_institution, global::System.Int64 currency)
        {
            Account account = new Account();
            account.id = id;
            account.name = name;
            account.account_type = account_type;
            account.financial_institution = financial_institution;
            account.currency = currency;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 account_type
        {
            get
            {
                return _account_type;
            }
            set
            {
                Onaccount_typeChanging(value);
                ReportPropertyChanging("account_type");
                _account_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("account_type");
                Onaccount_typeChanged();
            }
        }
        private global::System.Int64 _account_type;
        partial void Onaccount_typeChanging(global::System.Int64 value);
        partial void Onaccount_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 financial_institution
        {
            get
            {
                return _financial_institution;
            }
            set
            {
                Onfinancial_institutionChanging(value);
                ReportPropertyChanging("financial_institution");
                _financial_institution = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("financial_institution");
                Onfinancial_institutionChanged();
            }
        }
        private global::System.Int64 _financial_institution;
        partial void Onfinancial_institutionChanging(global::System.Int64 value);
        partial void Onfinancial_institutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.Int64 _currency;
        partial void OncurrencyChanging(global::System.Int64 value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ofx_acct_id
        {
            get
            {
                return _ofx_acct_id;
            }
            set
            {
                Onofx_acct_idChanging(value);
                ReportPropertyChanging("ofx_acct_id");
                _ofx_acct_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ofx_acct_id");
                Onofx_acct_idChanged();
            }
        }
        private global::System.String _ofx_acct_id;
        partial void Onofx_acct_idChanging(global::System.String value);
        partial void Onofx_acct_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> acct_limit
        {
            get
            {
                return _acct_limit;
            }
            set
            {
                Onacct_limitChanging(value);
                ReportPropertyChanging("acct_limit");
                _acct_limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acct_limit");
                Onacct_limitChanged();
            }
        }
        private Nullable<global::System.Decimal> _acct_limit;
        partial void Onacct_limitChanging(Nullable<global::System.Decimal> value);
        partial void Onacct_limitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_0", "Currency")]
        public Currency Currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PiggyModel.FK_Account_0", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PiggyModel.FK_Account_0", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> Currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PiggyModel.FK_Account_0", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("PiggyModel.FK_Account_0", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_1", "FinancialInstitution")]
        public FinancialInstitution FinancialInstitution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialInstitution>("PiggyModel.FK_Account_1", "FinancialInstitution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialInstitution>("PiggyModel.FK_Account_1", "FinancialInstitution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinancialInstitution> FinancialInstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinancialInstitution>("PiggyModel.FK_Account_1", "FinancialInstitution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinancialInstitution>("PiggyModel.FK_Account_1", "FinancialInstitution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_2", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("PiggyModel.FK_Account_2", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("PiggyModel.FK_Account_2", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("PiggyModel.FK_Account_2", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("PiggyModel.FK_Account_2", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Balance_0", "Balance")]
        public EntityCollection<Balance> Balances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Balance>("PiggyModel.FK_Balance_0", "Balance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Balance>("PiggyModel.FK_Balance_0", "Balance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_1", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("PiggyModel.FK_Transactions_1", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("PiggyModel.FK_Transactions_1", "Transactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_2", "Transactions")]
        public EntityCollection<Transaction> Transactions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("PiggyModel.FK_Transactions_2", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("PiggyModel.FK_Transactions_2", "Transactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static AccountType CreateAccountType(global::System.Int64 id, global::System.String name)
        {
            AccountType accountType = new AccountType();
            accountType.id = id;
            accountType.name = name;
            return accountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ofx_type
        {
            get
            {
                return _ofx_type;
            }
            set
            {
                Onofx_typeChanging(value);
                ReportPropertyChanging("ofx_type");
                _ofx_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ofx_type");
                Onofx_typeChanged();
            }
        }
        private global::System.String _ofx_type;
        partial void Onofx_typeChanging(global::System.String value);
        partial void Onofx_typeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_2", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("PiggyModel.FK_Account_2", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("PiggyModel.FK_Account_2", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Balance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Balance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Balance object.
        /// </summary>
        /// <param name="account">Initial value of the account property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="balance1">Initial value of the balance1 property.</param>
        public static Balance CreateBalance(global::System.Int64 account, global::System.DateTime date, global::System.Decimal balance1)
        {
            Balance balance = new Balance();
            balance.account = account;
            balance.date = date;
            balance.balance1 = balance1;
            return balance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 account
        {
            get
            {
                return _account;
            }
            set
            {
                if (_account != value)
                {
                    OnaccountChanging(value);
                    ReportPropertyChanging("account");
                    _account = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("account");
                    OnaccountChanged();
                }
            }
        }
        private global::System.Int64 _account;
        partial void OnaccountChanging(global::System.Int64 value);
        partial void OnaccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                if (_date != value)
                {
                    OndateChanging(value);
                    ReportPropertyChanging("date");
                    _date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("date");
                    OndateChanged();
                }
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal balance1
        {
            get
            {
                return _balance1;
            }
            set
            {
                Onbalance1Changing(value);
                ReportPropertyChanging("balance1");
                _balance1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("balance1");
                Onbalance1Changed();
            }
        }
        private global::System.Decimal _balance1;
        partial void Onbalance1Changing(global::System.Decimal value);
        partial void Onbalance1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Balance_0", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Balance_0", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Balance_0", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Balance_0", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("PiggyModel.FK_Balance_0", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Category CreateCategory(global::System.Int64 id, global::System.String name)
        {
            Category category = new Category();
            category.id = id;
            category.name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> parent
        {
            get
            {
                return _parent;
            }
            set
            {
                OnparentChanging(value);
                ReportPropertyChanging("parent");
                _parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent");
                OnparentChanged();
            }
        }
        private Nullable<global::System.Int64> _parent;
        partial void OnparentChanging(Nullable<global::System.Int64> value);
        partial void OnparentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Category_0", "Category1")]
        public EntityCollection<Category> Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("PiggyModel.FK_Category_0", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("PiggyModel.FK_Category_0", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Category_0", "Category")]
        public Category Category2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Category_0", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Category_0", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Category_0", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PiggyModel.FK_Category_0", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_0", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("PiggyModel.FK_Transactions_0", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("PiggyModel.FK_Transactions_0", "Transactions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Currency CreateCurrency(global::System.Int64 id, global::System.String symbol, global::System.String name)
        {
            Currency currency = new Currency();
            currency.id = id;
            currency.symbol = symbol;
            currency.name = name;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_0", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("PiggyModel.FK_Account_0", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("PiggyModel.FK_Account_0", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="FinancialInstitution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinancialInstitution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinancialInstitution object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static FinancialInstitution CreateFinancialInstitution(global::System.Int64 id, global::System.String name)
        {
            FinancialInstitution financialInstitution = new FinancialInstitution();
            financialInstitution.id = id;
            financialInstitution.name = name;
            return financialInstitution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ofx_bankid
        {
            get
            {
                return _ofx_bankid;
            }
            set
            {
                Onofx_bankidChanging(value);
                ReportPropertyChanging("ofx_bankid");
                _ofx_bankid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ofx_bankid");
                Onofx_bankidChanged();
            }
        }
        private global::System.String _ofx_bankid;
        partial void Onofx_bankidChanging(global::System.String value);
        partial void Onofx_bankidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Account_1", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("PiggyModel.FK_Account_1", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("PiggyModel.FK_Account_1", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Preference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Preference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Preference object.
        /// </summary>
        /// <param name="default_currency">Initial value of the default_currency property.</param>
        public static Preference CreatePreference(global::System.Int64 default_currency)
        {
            Preference preference = new Preference();
            preference.default_currency = default_currency;
            return preference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 default_currency
        {
            get
            {
                return _default_currency;
            }
            set
            {
                if (_default_currency != value)
                {
                    Ondefault_currencyChanging(value);
                    ReportPropertyChanging("default_currency");
                    _default_currency = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("default_currency");
                    Ondefault_currencyChanged();
                }
            }
        }
        private global::System.Int64 _default_currency;
        partial void Ondefault_currencyChanging(global::System.Int64 value);
        partial void Ondefault_currencyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PiggyModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="value">Initial value of the value property.</param>
        /// <param name="last_modified">Initial value of the last_modified property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static Transaction CreateTransaction(global::System.Int64 id, global::System.DateTime date, global::System.Decimal value, global::System.DateTime last_modified, global::System.String status)
        {
            Transaction transaction = new Transaction();
            transaction.id = id;
            transaction.date = date;
            transaction.value = value;
            transaction.last_modified = last_modified;
            transaction.status = status;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> from_account
        {
            get
            {
                return _from_account;
            }
            set
            {
                Onfrom_accountChanging(value);
                ReportPropertyChanging("from_account");
                _from_account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("from_account");
                Onfrom_accountChanged();
            }
        }
        private Nullable<global::System.Int64> _from_account;
        partial void Onfrom_accountChanging(Nullable<global::System.Int64> value);
        partial void Onfrom_accountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> to_account
        {
            get
            {
                return _to_account;
            }
            set
            {
                Onto_accountChanging(value);
                ReportPropertyChanging("to_account");
                _to_account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("to_account");
                Onto_accountChanged();
            }
        }
        private Nullable<global::System.Int64> _to_account;
        partial void Onto_accountChanging(Nullable<global::System.Int64> value);
        partial void Onto_accountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Decimal _value;
        partial void OnvalueChanging(global::System.Decimal value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String payee
        {
            get
            {
                return _payee;
            }
            set
            {
                OnpayeeChanging(value);
                ReportPropertyChanging("payee");
                _payee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("payee");
                OnpayeeChanged();
            }
        }
        private global::System.String _payee;
        partial void OnpayeeChanging(global::System.String value);
        partial void OnpayeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> category
        {
            get
            {
                return _category;
            }
            set
            {
                OncategoryChanging(value);
                ReportPropertyChanging("category");
                _category = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("category");
                OncategoryChanged();
            }
        }
        private Nullable<global::System.Int64> _category;
        partial void OncategoryChanging(Nullable<global::System.Int64> value);
        partial void OncategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String from_ofx_fitid
        {
            get
            {
                return _from_ofx_fitid;
            }
            set
            {
                Onfrom_ofx_fitidChanging(value);
                ReportPropertyChanging("from_ofx_fitid");
                _from_ofx_fitid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("from_ofx_fitid");
                Onfrom_ofx_fitidChanged();
            }
        }
        private global::System.String _from_ofx_fitid;
        partial void Onfrom_ofx_fitidChanging(global::System.String value);
        partial void Onfrom_ofx_fitidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String to_ofx_fitid
        {
            get
            {
                return _to_ofx_fitid;
            }
            set
            {
                Onto_ofx_fitidChanging(value);
                ReportPropertyChanging("to_ofx_fitid");
                _to_ofx_fitid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("to_ofx_fitid");
                Onto_ofx_fitidChanged();
            }
        }
        private global::System.String _to_ofx_fitid;
        partial void Onto_ofx_fitidChanging(global::System.String value);
        partial void Onto_ofx_fitidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime last_modified
        {
            get
            {
                return _last_modified;
            }
            set
            {
                Onlast_modifiedChanging(value);
                ReportPropertyChanging("last_modified");
                _last_modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("last_modified");
                Onlast_modifiedChanged();
            }
        }
        private global::System.DateTime _last_modified;
        partial void Onlast_modifiedChanging(global::System.DateTime value);
        partial void Onlast_modifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_1", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_1", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_1", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_1", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("PiggyModel.FK_Transactions_1", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_2", "Account")]
        public Account Account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_2", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_2", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> Account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("PiggyModel.FK_Transactions_2", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("PiggyModel.FK_Transactions_2", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PiggyModel", "FK_Transactions_0", "Category")]
        public Category Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Transactions_0", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Transactions_0", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("PiggyModel.FK_Transactions_0", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("PiggyModel.FK_Transactions_0", "Category", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
